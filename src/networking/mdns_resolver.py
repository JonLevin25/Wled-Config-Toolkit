""" Tool for loading a json mdns-to-ip map generated by a separate tool """

import json
from pprint import pprint
import os.path as path

wled_ips_json = "../wled-discover-service/wled_ips.json"

_wled_ips = None
updateTime = None
_mdnsToIps = None

if path.exists(wled_ips_json):
    with open(wled_ips_json, 'r') as json_file:
        _wled_ips = json.load(json_file)
        updateTime = _wled_ips['updateTime']
        _mdnsToIps = _wled_ips['mdnsToIps']
else:
    pass  # irrelevant for now
    # print(f'MDNS->ip map not found! ({path.abspath(wled_ips_json)})')


def resolve_mdns(mdns: str):
    if not _mdnsToIps:
        return mdns

    localPostfix = '.local'
    if mdns.endswith(localPostfix):
        mdns = mdns[:-len(localPostfix)]
    if mdns in _mdnsToIps:
        return _mdnsToIps[mdns]
    return None


if __name__ == '__main__':
    print("Testing MDNS Reolve json:")
    pprint(_mdnsToIps)
